# makedefs variant for PC's (armmake)
#
# RCS $Revision: 1.2.4.1 $
# Checkin $Date: 1998/02/25 17:36:22 $
# Revising $Author: dbrooke $
#
# Set PCSZ to 32 or 26, as appropriate
# Set ENDIAN to b or l as required.
# Set FPIS (FP Instruction Set) to 2 or 3 as appropriate
# Set LDMLIMIT to the maximum number of registers to be allowed in a LDM or STM
PCSZ=32
ENDIAN=l
FPIS=2
LDMLIMIT=16

# set ARMTOOLS if the ARM tools are not available on your PATH
# NB: Leave a trailing directory separator at the end
ARMTOOLS=

MAKETOOL=$(ARMTOOLS)armmake
CC=$(ARMTOOLS)armcc
LD=$(ARMTOOLS)armlink
AS=$(ARMTOOLS)armasm
ARMLIB=$(ARMTOOLS)armlib

MKTMP=mktmp
RM=del
RENAME=rename
APPEND=type
MAKEMAKE=..\util\makemake
DEPLIST=deplist
BAKFILE=MakeFBak
CP=copy

# via files are needed because of DOS command-line length restrictions
CFLAGS=-via cv
DCFLAGS=$(CFLAGS) -M
AFLAGS=-via av 
DAFLAGS=$(AFLAGS) -D $(MKTMP)

FPE=fpe_$(PCSZ)$(ENDIAN)

via: 
        @echo -$(ENDIAN)i -ffah -apcs 3/$(PCSZ)bit/fpe$(FPIS) -zr$(LDMLIMIT) > cv
        @echo -c -J..\..\include -I..,..\ros_src,..\fplib,../stdh -I../../../fpe400/coresrc -DHOSTSEX_$(ENDIAN) >> cv
        @echo -D__riscos -D__acorn $(CFL) >> cv
        @echo -$(ENDIAN)i -apcs 3/$(PCSZ)bit -PD "FPIS SETA $(FPIS)" > av
        @echo -PD "LDM_MAX SETA $(LDMLIMIT)" -I..,..\ros_src,../stdh -I../../../fpe400/coresrc >> av
        @echo
        @echo ARM C-library build is a 3-stage process on the PC
        @echo -via files have been created for armasm and armcc
        @echo now type:
        @echo   $(MAKETOOL) -a depend      -- optional; adds dependencies to makefile
        @echo   $(MAKETOOL) armlib.o       -- to make the library
