### Sources for RISCOS targetting of C library
###
## RCS $Revision: 1.13 $
## Checkin $Date: 1996/01/25 16:00:19 $
## Revising $Author: hmeeking $
##
ctype           ctype.c [-Dctype_c]
isalnum         ctype.c [-Disalnum_c]
isalpha         ctype.c [-Disalpha_c]
iscntrl         ctype.c [-Discntrl_c]
isdigit         ctype.c [-Disdigit_c]
isgraph         ctype.c [-Disgraph_c]
islower         ctype.c [-Dislower_c]
isprint         ctype.c [-Disprint_c]
ispunct         ctype.c [-Dispunct_c]
isspace         ctype.c [-Disspace_c]
isupper         ctype.c [-Disupper_c]
isxdigit        ctype.c [-Disxdigit_c]
tolower         ctype.c [-Dtolower_c]
toupper         ctype.c [-Dtoupper_c]
_set8859        ctype.c [-D_set8859_c]
abs             math.c [-Dabs_c]
cosh            math.c [-Dcosh_c]
div             math.c [-Ddiv_c]
fmod            math.c [-Dfmod_c]
frexp           math.c [-Dfrexp_c]
labs            math.c [-Dlabs_c]
ldexp           math.c [-Dldexp_c]
ldiv            math.c [-Dldiv_c]
sinh            math.c [-Dsinh_c]
tanh            math.c [-Dtanh_c]
# if fptype == software
sincos          math.c [-D_sincos_c]
sin             math.c [-Dsin_c]
cos             math.c [-Dcos_c]
exp             math.c [-Dexp_c]
log             math.c [-Dlog_c]
log10           math.c [-Dlog10_c]
sqrt            math.c [-Dsqrt_c]
tancot          math.c [-D_tancot_c]
tan             math.c [-Dtan_c]
cot             math.c [-D_cot_c]
atan            math.c [-Datan_c]
atan2           math.c [-Datan2_c]
asincos         math.c [-D_asinacos_c]
asin            math.c [-Dasin_c]
acos            math.c [-Dacos_c]
pow             math.c [-Dpow_c]
fabs            math.c [-Dfabs_c]
floor           math.c [-Dfloor_c]
ceil            math.c [-Dceil_c]
modf            math.c [-Dmodf_c]
fhelp           fhelp.c [-zpq0]
# else
xmath           xmath.c
#  if fpregargs == on
acos            mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "acos"']
asin            mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "asin"']
atan            mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "atan"']
atan2           mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "atan2"']
ceil            mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "ceil"']
cos             mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "cos"']
exp             mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "exp"']
fabs            mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "fabs"']
floor           mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "floor"']
log             mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "log"']
log10           mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "log10"']
modf            mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "modf"']
pow             mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "pow"']
sin             mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "sin"']
sqrt            mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "sqrt"']
tan             mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "tan"']
_stfp           mathf.s [-PD 'fpregargs SETL {TRUE}' -PD 'make SETS "_stfp"']
#  else
acos            mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "acos"']
asin            mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "asin"']
atan            mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "atan"']
atan2           mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "atan2"']
ceil            mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "ceil"']
cos             mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "cos"']
exp             mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "exp"']
fabs            mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "fabs"']
floor           mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "floor"']
log             mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "log"']
log10           mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "log10"']
modf            mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "modf"']
pow             mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "pow"']
sin             mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "sin"']
sqrt            mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "sqrt"']
tan             mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "tan"']
_stfp           mathf.s [-PD 'fpregargs SETL {FALSE}' -PD 'make SETS "_stfp"']
#  end
_edom_mh        mathf.s [-PD 'make SETS "_edom_mh"']
_ernge_0        mathf.s [-PD 'make SETS "_ernge_0"']
_ernge_h        mathf.s [-PD 'make SETS "_ernge_h"']
_erng_mh        mathf.s [-PD 'make SETS "_ernge_mh"']
_ldfp           mathf.s [-PD 'make SETS "_ldfp"']
_seterno        mathf.s [-PD 'make SETS "_set_errno"']
# end
fmapstor        profile.c [-D_fmapstore_c]
mapstore        profile.c [-D_mapstore_c]
_mapstor        profile.c [-D_map_store_c]
writepro        profile.c [-D_write_pro_c]
image           image.s  [-PD 'make SETS "all"']
_sputc          printf.c [-D_sputc_c]
fprintf         printf.c [-Dfprintf_c]
printf          printf.c [-Dprintf_c]
sprintf         printf.c [-Dsprintf_c]
vfprintf        printf.c [-Dvfprintf_c]
vprintf         printf.c [-Dvprintf_c]
vsprintf        printf.c [-Dvsprintf_c]
_fprintf        printf.c [-D_fprintf_c]
_fp_disp        printf.c [-D_fp_disp_c]
nofpdisp        printf.c [-D_nofp_disp_c]
_printf         printf.c [-D_printf_c]
_sprintf        printf.c [-D_sprintf_c]
_vfprntf        printf.c [-D_vfprintf_c]
_vsprntf        printf.c [-D_vsprintf_c]
__vfpntf        printf.c [-D__vfprintf_c]
_chval          scanf.c [-D_chval_c]
_strtoul        scanf.c [-D_strtoul_c]
strtod          scanf.c [-Dstrtod_c]
strtol          scanf.c [-Dstrtol_c]
strtoul         scanf.c [-Dstrtoul_c]
_scanf          scanf.c [-D_scanf_c]
scanf           scanf.c [-Dscanf_c]
fscanf          scanf.c [-Dfscanf_c]
sscanf          scanf.c [-Dsscanf_c]
atof            scanf.c [-Datof_c]
atoi            scanf.c [-Datoi_c]
atol            scanf.c [-Datol_c]
backspce        stdio.c [-Dbackspace_c]
clearerr        stdio.c [-Dclearerr_c]
feof            stdio.c [-Dfeof_c]
ferror          stdio.c [-Dferror_c]
fflush          stdio.c [-Dfflush_c]
fgetc           stdio.c [-Dfgetc_c]
fgetpos         stdio.c [-Dfgetpos_c]
fgets           stdio.c [-Dfgets_c]
fisatty         stdio.c [-Dfisatty_c]
filbuf          stdio.c [-Dfilbuf_c]
flsbuf          stdio.c [-Dflsbuf_c]
fputc           stdio.c [-Dfputc_c]
fputs           stdio.c [-Dfputs_c]
fread           stdio.c [-Dfread_c]
fseek           stdio.c [-Dfseek_c]
fsetpos         stdio.c [-Dfsetpos_c]
ftell           stdio.c [-Dftell_c]
fwrite          stdio.c [-Dfwrite_c]
getc            stdio.c [-Dgetc_c]
getchar         stdio.c [-Dgetchar_c]
gets            stdio.c [-Dgets_c]
osf             stdio.c [-Dosf_c]
perror          stdio.c [-Dperror_c]
putc            stdio.c [-Dputc_c]
putchar         stdio.c [-Dputchar_c]
puts            stdio.c [-Dputs_c]
rewind          stdio.c [-Drewind_c]
setbuf          stdio.c [-Dsetbuf_c]
setvbuf         stdio.c [-Dsetvbuf_c]
stdio           stdio.c [-Dstdio_c]
tmpnam          stdio.c [-Dtmpnam_c]
ungetc          stdio.c [-Dungetc_c]
_sys_msg        stdio.c [-D_sys_msg_c]
__dup           stdio.c [-D__dup_c]
alloc           alloc.c [-Dalloc_c]
calloc          alloc.c [-Dcalloc_c]
realloc         alloc.c [-Drealloc_c]
rand            stdlib.c [-Drand_c]
ansirand        stdlib.c [-DANSI_rand_c]
atexit          stdlib.c [-Datexit_c]
exit            stdlib.c [-Dexit_c]
abort           stdlib.c [-Dabort_c]
qsort           stdlib.c [-Dqsort_c]
bsearch         stdlib.c [-Dbsearch_c]
_version        stdlib.c [-D_version_c]
signal          signal.c
assert          assert.c
locale          locale.c [-Dlocale_c]
localecv        locale.c [-Dlocaleconv_c]
_lc             locale.c [-D_lc_c]
mblen           locale.c [-Dmblen_c]
mbtowc          locale.c [-Dmbtowc_c]
wctomb          locale.c [-Dwctomb_c]
mbstowcs        locale.c [-Dmbstowcs_c]
wcstombs        locale.c [-Dwcstombs_c]
memchr          string.c [-Dmemchr_c]
memcmp          string.c [-Dmemcmp_c]
strcat          string.c [-Dstrcat_c]
strchr          string.c [-Dstrchr_c]
strcmp          string.c [-Dstrcmp_c]
strcoll         string.c [-Dstrcoll_c]
strcpy          string.c [-Dstrcpy_c]
strcspn         string.c [-Dstrcspn_c]
strerror        string.c [-Dstrerror_c]
strlen          string.c [-Dstrlen_c]
strncat         string.c [-Dstrncat_c]
strncmp         string.c [-Dstrncmp_c]
strncpy         string.c [-Dstrncpy_c]
strpbrk         string.c [-Dstrpbrk_c]
strrchr         string.c [-Dstrrchr_c]
strspn          string.c [-Dstrspn_c]
strstr          string.c [-Dstrstr_c]
strtok          string.c [-Dstrtok_c]
strxfrm         string.c [-Dstrxfrm_c]
_streror        string.c [-D_strerror_c]
# if memcpy == fast
memcpy          memcpset.s [-PD 'make SETS "memcpy"']
memset          memcpset.s [-PD 'make SETS "memset"']
# else
memcpy          string.c [-Dmemcpy_c]
memmove         string.c [-Dmemmove_c]
memset          string.c [-Dmemset_c]
# end
asctime         time.c [-Dasctime_c]
ctime           time.c [-Dctime_c]
difftime        time.c [-Ddifftime_c]
gmtime          time.c [-Dgmtime_c]
locltime        time.c [-Dlocaltime_c]
mktime          time.c [-Dmktime_c]
strftime        time.c [-Dstrftime_c]
_monlen         time.c [-D_monlen_c]
rtcount         unhosted.s [-PD 'make SETS "count"']
rtcount1        unhosted.s [-PD 'make SETS "count1"']
rtdivtst        unhosted.s [-PD 'make SETS "divtest"']
rtsdiv10        unhosted.s [-PD 'make SETS "sdiv10"']
rtudiv10        unhosted.s [-PD 'make SETS "udiv10"']
dspdiv32        unhosted.s [-PD 'make SETS "dspdiv32"']
dspdiv64        unhosted.s [-PD 'make SETS "dspdiv64"']
# if divide == small
rt_sdiv         unhosted.s [-PD 'make SETS "sdiv_rolled"']
rt_udiv         unhosted.s [-PD 'make SETS "udiv_rolled"']
# elif divide == unrolled
rt_sdiv         unhosted.s [-PD 'make SETS "sdiv_unrolled8"']
rt_udiv         unhosted.s [-PD 'make SETS "udiv_unrolled8"']
# end
rt_div0         unhosted.s [-PD 'make SETS "div0"']
rtrwchck        unhosted.s [-PD 'make SETS "rwcheck"']
setjmp          setjmp.s
h_signal        h_signal.s
# if stack == chunked
stkchnks        stkchunk.s [-PD 'make SETS "stkchunks"']
chunkcpy        stkchunk.s [-PD 'make SETS "chunk_copy"']
# else
stkcont         stkcont.s
# end
unwind          unwind.s
kallocs         kallocs.s
cpp_init        armsys.c [-Dcpp_init_c -fc]
lib_init        armsys.c [-Dlib_init_c]
_sysdie         armsys.c [-D_sysdie_c]
sysalloc        armsys.c [-D_sys_alloc_c]
# if stdfile_redirection == on
_main           armsys.c [-D_main_c -DSTDFILE_REDIRECTION]
# else
_main           armsys.c [-D_main_c]
# end
# if backtrace == on
handlers        handlers.s [-PD 'backtrace_enabled SETL {TRUE}']
backtrc         backtrc.c
# else
handlers        handlers.s [-PD 'backtrace_enabled SETL {FALSE}']
# end
hosterr         ros_src/hosterr.c
hostsig         ros_src/hostsig.c
remove          ros_src/iosuppt.c [-Dremove_c]
rename          ros_src/iosuppt.c [-Drename_c]
_sysopen        ros_src/iosuppt.c [-Dsys_open_c]
_ttyread        ros_src/iosuppt.c [-Dttyread_c]
ttywrite        ros_src/iosuppt.c [-Dttywrite_c]
sysistty        ros_src/iosuppt.c [-Dsys_istty_c]
sys_seek        ros_src/iosuppt.c [-Dsys_seek_c]
sys_flen        ros_src/iosuppt.c [-Dsys_flen_c]
sysiserr        ros_src/iosuppt.c [-Dsys_iserror_c]
syswrite        ros_src/iosuppt.c [-Dsys_write_c]
sys_read        ros_src/iosuppt.c [-Dsys_read_c]
syensure        ros_src/iosuppt.c [-Dsys_ensure_c]
sysclose        ros_src/iosuppt.c [-Dsys_close_c]
clock           ros_src/iosuppt.c [-Dclock_c]
time            ros_src/iosuppt.c [-Dtime_c]
system          ros_src/iosuppt.c [-Dsystem_c]
getenv          ros_src/iosuppt.c [-Dgetenv_c]
overmgr         ros_src/overmgr.s
_tmpnam         ros_src/_tmpnam.s
# if fptype == software
kernel          ros_src/kernel.s  [-PD 'No_FP SETL {TRUE}']
# else
kernel          ros_src/kernel.s
# end
escseen         ros_src/escseen.s
k_system        ros_src/k_system.s
traphand        ros_src/traphand.s
heapsupt        ros_src/heapsupt.s
osargs          ros_src/osveneer.s [-PD 'make SETS "osargs"']
osbget          ros_src/osveneer.s [-PD 'make SETS "osbget"']
osbput          ros_src/osveneer.s [-PD 'make SETS "osbput"']
osbyte          ros_src/osveneer.s [-PD 'make SETS "osbyte"']
oscli           ros_src/osveneer.s [-PD 'make SETS "oscli"']
osfile          ros_src/osveneer.s [-PD 'make SETS "osfile"']
osfind          ros_src/osveneer.s [-PD 'make SETS "osfind"']
osgbpb          ros_src/osveneer.s [-PD 'make SETS "osgbpb"']
osrdch          ros_src/osveneer.s [-PD 'make SETS "osrdch"']
osword          ros_src/osveneer.s [-PD 'make SETS "osword"']
oswrch          ros_src/osveneer.s [-PD 'make SETS "oswrch"']
swi             ros_src/osveneer.s [-PD 'make SETS "swi"']
k_getenv        ros_src/osveneer.s [-PD 'make SETS "k_getenv"']
k_setenv        ros_src/osveneer.s [-PD 'make SETS "k_setenv"']
k_hostos        ros_src/osveneer.s [-PD 'make SETS "k_hostos"']
lasterr         ros_src/osveneer.s [-PD 'make SETS "lasterr"']
k_erexit         ros_src/osveneer.s [-PD 'make SETS "k_errexit"']
# if fp_type == linked
fpe             fpe/fpe_26l.o
fpestub         fpestub.s
#else
infpe           ros_src/infpe.s
#end
